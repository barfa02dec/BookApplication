package com.app.model;

import java.time.LocalDate;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import org.springframework.stereotype.Component;

import com.app.validation.ValidateBookDetails;

@Entity
@Table(name = "booking_details")
public class BookingDetails {

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private int booking_id;
	@NotNull
	private LocalDate delivery_date;
	@NotNull
	private int quantity;
	@ManyToOne(fetch = FetchType.EAGER,cascade = CascadeType.ALL)
	@JoinColumn(name = "book_inventory_id",foreignKey = @ForeignKey(name = "book_inventory_id"))
	private BookInventory book_inventory_id;
	@ManyToOne(fetch = FetchType.EAGER,cascade = CascadeType.ALL)
	@JoinColumn(name = "order_id")
	private OrderDetails order_id;
	
	public BookingDetails() {
		super();
	}
	

	public BookingDetails(int quantity, BookInventory book_inventory_id) {
		super();
		ValidateBookDetails.checkNullValue(quantity, "quantity");
		this.quantity = quantity;
		ValidateBookDetails.checkNullValue(book_inventory_id, "book_inventory_id");
		this.book_inventory_id = book_inventory_id;
	}


	public int getBooking_id() {
		return booking_id;
	}

	public void setBooking_id(int booking_id) {
		this.booking_id = booking_id;
	}

	public LocalDate getDelivery_date() {
		return delivery_date;
	}

	public void setDelivery_date(LocalDate delivery_date) {
		this.delivery_date = delivery_date;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	
	public BookInventory getBook_inventory_id() {
		return book_inventory_id;
	}

	public void setBook_inventory_id(BookInventory book_inventory_id) {
		this.book_inventory_id = book_inventory_id;
	}

	public OrderDetails getOrder_id() {
		return order_id;
	}

	public void setOrder_id(OrderDetails order_id) {
		this.order_id = order_id;
	}

	@Override
	public String toString() {
		return "BookingDetails [booking_id=" + booking_id + ", delivery_date=" + delivery_date + ", quantity="
				+ quantity + ", book_inventory_id=" + book_inventory_id + ", order_id=" + order_id + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((book_inventory_id == null) ? 0 : book_inventory_id.hashCode());
		result = prime * result + booking_id;
		result = prime * result + ((delivery_date == null) ? 0 : delivery_date.hashCode());
		result = prime * result + ((order_id == null) ? 0 : order_id.hashCode());
		result = prime * result + quantity;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		BookingDetails other = (BookingDetails) obj;
		if (book_inventory_id == null) {
			if (other.book_inventory_id != null)
				return false;
		} else if (!book_inventory_id.equals(other.book_inventory_id))
			return false;
		if (booking_id != other.booking_id)
			return false;
		if (delivery_date == null) {
			if (other.delivery_date != null)
				return false;
		} else if (!delivery_date.equals(other.delivery_date))
			return false;
		if (order_id == null) {
			if (other.order_id != null)
				return false;
		} else if (!order_id.equals(other.order_id))
			return false;
		if (quantity != other.quantity)
			return false;
		return true;
	}
	
}
