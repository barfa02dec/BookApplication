package com.app.service;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import com.app.exception.BookException;
import com.app.model.BookInventory;
import com.app.repository.BookInventoryRepository;

@Service
public class BookInventoryImp implements BookInventoryInf{


	@Autowired
	BookInventoryRepository book_inventory_repo;
	@Autowired
	BookServiceInf book_service;

	/**
	 * Input List of book inventory object and book id
	 * get book object by book id and set in book inventory object
	 * insert all book inventory details into table
	 * return list of book inventory object that stored in database
	 * @throws BookException
	 */
	@Override
	public List<BookInventory> addBookInventory(List<BookInventory> book_inventory,int book_id){
		try {
			for(BookInventory b : book_inventory){
				b.setBookId(book_service.getBookById(book_id));
				book_inventory_repo.save(b);
			}
			return book_inventory;
		}catch(BookException e) {
			throw e;
		}
	}

	/**
	 * Input book inventory id
	 * return book inventory object 
	 * @throws BookException
	 */
	@Override
	public BookInventory getBookInventoryById(int book_inventory){
		return book_inventory_repo.findById(book_inventory).orElseThrow(() -> new BookException(HttpStatus.NOT_FOUND,"Invalid book inventory id"));
	}
	/**
	 * input is book inventory object without book id
	 * check object is exist or not and set book id
	 * replace old object by new object
	 * return updated object
	 * @throws BookException
	 */
	@Override
	public BookInventory updateBookInventory(BookInventory book_inventory){
		try{
			BookInventory bi = this.getBookInventoryById(book_inventory.getBookInventoryId());
			book_inventory.setBookId(bi.getBookId());
			return book_inventory_repo.save(book_inventory);
		}catch (BookException e) {
			throw e;
		}
	}
	
}
